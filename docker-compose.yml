include:
  - spark/spark-compose.yml
  - elastic/elastic-compose.yml
  - kibana/kibana-compose.yml
  - apps/Market_Reader/docker-compose.yml
  
services:
  postgres:
    image: postgres:latest
    env_file:
      - .env
    shm_size: 2gb 
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${DEF_DB_NAME}
      - PGDATA=/data/postgres
    # /mnt/bulkStorage is the 4TB hard disk mount
    volumes:
      - ${PG_STORAGE}:/data/postgres
      - ${SQL_FILE_DIR}:/home
    restart: unless-stopped
    networks:
      - homeserver
    profiles:
      - llm
    ports:
      - "5432:5432"
    container_name: postgres_container

  pgadmin:
    image: dpage/pgadmin4:8.0
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    restart: unless-stopped
    user: root
    volumes:
      - ${PGADMIN_STORAGE}:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
     - homeserver
    profiles:
      - llm
    depends_on:
     - postgres
    container_name: pgadmin_service
    
  ollama:
    image: ollama/ollama
    restart: unless-stopped
    user: root
    volumes:
        - ./ollama:/root/.ollama
    ports:
        - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ["0"]
              capabilities: [gpu]
    profiles:
      - llm
    container_name: ollama
    
  proxy:
    build:
      context: ./proxy/
      dockerfile: Dockerfile
      args:
          - SRC_IMG=nginx
          - SRC_TAG=latest
          - PROXY_USER=${PROXY_USER}
          - PROXY_PASSWORD=${PROXY_PASSWORD}
          - no_cache
    environment:
      - PROXY_USER=${PROXY_USER}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs/crunchy-dyndns.crt:/etc/ssl/certs/crunchy-dyndns.crt
      - ./certs/crunchy-dyndns.key:/etc/ssl/private/crunchy-dyndns.key
      - ${ELASTIC_CERT_LOC}/ca.crt:/etc/ssl/certs/elastic-ca.crt
      - ${ELASTIC_CERT_LOC}/ca.key:/etc/ssl/certs/elastic-ca.key
      - ./proxy/log:/var/log
    ports:
      - "443:443"
      - "80:80"
    restart: no #unless-stopped
    stop_grace_period: 30s
    extra_hosts:
      - "host.docker.internal:host-gateway"
    security_opt:
      - seccomp:unconfined
    networks:
     - homeserver
    profiles:
      - llm
    depends_on:
      # - kibana
      - pgadmin
    container_name: proxy_service

networks:
  homeserver:
    name: homeserver
    labels:
      com.example.description: "home docker network"